# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, ES Solutions
# This file is distributed under the same license as the ESSArch Core
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ESSArch Core 3.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-28 13:56+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../development.rst:5
msgid "Development Environment"
msgstr ""

#: ../../development.rst:9
msgid "Getting the source"
msgstr ""

#: ../../development.rst:11
msgid "To get started, clone the repositories:"
msgstr ""

#: ../../development.rst:21
msgid "Setting up virtual Python environments"
msgstr ""

#: ../../development.rst:23
msgid ""
"You will need Python 3.7 along with ``pip``, which is what the backend of"
" ESSArch is built on. It is recommended to have ESSArch in its own "
"virtual python environment. Taking it even further, one might also have "
"one virtual environment for each ESSArch application."
msgstr ""

#: ../../development.rst:28
msgid ""
"Creating and managing virtual environments can be done with the "
"virtualenv_ Python package or using more advanced tools such as pyenv_ or"
" pipenv_."
msgstr ""

#: ../../development.rst:33
msgid "Installing Python dependencies"
msgstr ""

#: ../../development.rst:35
msgid ""
"Inside each virtual environment you then need to install the Python "
"dependencies:"
msgstr ""

#: ../../development.rst:44
msgid ""
"ESSArch Core also contains a number of extra dependencies depending on "
"the needs of the target environment. These are listed in the "
"``extras_require`` section of the ``setup.py`` file at the root of the "
"directory and are installed by appending a list of extras to the command "
"above."
msgstr ""

#: ../../development.rst:49
msgid ""
"For example, to install the requirements for building the docs and "
"running the tests:"
msgstr ""

#: ../../development.rst:59
msgid "Setting environment variables"
msgstr ""

#: ../../development.rst:61
msgid ""
"Each application backend requires the path to the ESSArch Core directory "
"along with the application directory to be included in the ``PYTHONPATH``"
" variable. Each application frontend requires the ``ÃˆC_FRONTEND`` "
"variable to be set to the absolute path of the ``ESSArch_Core/frontend`` "
"directory in ESSArch Core."
msgstr ""

#: ../../development.rst:66
msgid ""
"If you have a config and/or plugin directory, these will also have to be "
"added to the ``PYTHONPATH`` variable."
msgstr ""

#: ../../development.rst:70
msgid "Here is an example for an installation of ESSArch Tools for Producer:"
msgstr ""

#: ../../development.rst:82
msgid ""
"Tools such as direnv_ are recommended to automatically switch between "
"environment variables while working with multiple applications."
msgstr ""

#: ../../development.rst:87
msgid "Configuring services"
msgstr ""

#: ../../development.rst:89
msgid ""
"ESSArch requires a relational database, RabbitMQ, Redis and "
"Elasticsearch. Each service can be configured in the configuration file "
"of each application."
msgstr ""

#: ../../development.rst:94
msgid ":ref:`configuration`"
msgstr ""

#: ../../development.rst:98
msgid "Running migrations"
msgstr ""

#: ../../development.rst:100
msgid "All changes to the database are applied using the `migrate` command:"
msgstr ""

#: ../../development.rst:107
msgid "Installing initial data"
msgstr ""

#: ../../development.rst:109
msgid ""
"Use the installation script in ESSArch Core to setup default event types "
"and system parameters"
msgstr ""

#: ../../development.rst:116
msgid ""
"The installation script in each application adds users, paths and other "
"application specific initial data."
msgstr ""

#: ../../development.rst:125
msgid ""
"The paths created has to exist in the filesystem before being used. See "
":ref:`directory-structure` for the default structure"
msgstr ""

#: ../../development.rst:130
msgid "Building the frontend"
msgstr ""

#: ../../development.rst:132
msgid ""
"To build the frontend you need Node.js_ 8+ with yarn_, and gulp-cli_ "
"globally installed:"
msgstr ""

#: ../../development.rst:139
msgid "For each application, install the dependencies and build the source:"
msgstr ""

#: ../../development.rst:149
msgid "Starting the development web server"
msgstr ""

#: ../../development.rst:151
msgid ""
"To start the development web server provided by Django for the "
"applications, run the following in the root of each application:"
msgstr ""

#: ../../development.rst:159
msgid ""
"To run multiple applications simultaneously you need to start each on "
"different ports, simply append the port to the end of the command:"
msgstr ""

#: ../../development.rst:168
msgid ""
"You can now access the application from your web browser by visiting "
"http://localhost:8000/"
msgstr ""

#: ../../development.rst:172
msgid "Starting background workers"
msgstr ""

#: ../../development.rst:174
msgid ""
"Much of ESSArch is done on background workers. These needs to run in "
"addition to the web server. Run the following in the root of each "
"application:"
msgstr ""

#: ../../development.rst:183
msgid "Starting background beat processes"
msgstr ""

#: ../../development.rst:185
msgid ""
"Background beat processes are also needed to run some operations "
"continously. Run the following in the root of each application:"
msgstr ""

